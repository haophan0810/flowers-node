extends includes/layout.pug


mixin product(item)
    - const nameProductSlug = item.productNameSlug
    - const nameProduct = item.productName
    - const idProduct = item.id
    - const imageSrc = item.ProductImages[0].imageSrc
    - const nameImageProduct = item.ProductImages[0].imageName
    - const lengthProductDiscount = item.ProductDiscounts.length
    - const isActiveProductDiscount = lengthProductDiscount ? item.ProductDiscounts[0].isActive : false
    - const costBase = item.ProductPricings[0].basePrice
    - const discountValue = lengthProductDiscount ? item.ProductDiscounts[0].discountValue : 0
    - let costDiscount = discountValue ? costBase - (discountValue*costBase)/100 : 0
    - costDiscount = Math.round(costDiscount)
    - const productStar = parseInt(item.productStar);
    - const productStarHalf = productStar < item.productStar? true : false

    
    .col-sm-12.col-md-6.col-lg-3.mb-5.d-flex.align-items-stretch       
        .card
            .card-img-top.product__relative
                a.card-link(href=`/product/${nameProductSlug}.${idProduct}.${idCategory}.html`)
                    img.productImg(src=imageSrc, alt=item.ProductImages.imageName)
                    if lengthProductDiscount>0 && isActiveProductDiscount
                        .lable-promotion
                            .btn.btn-danger.btn--sale -#{discountValue} %
            .card-body
                a.card-link(href=`/product/${nameProductSlug}.${idProduct}.${idCategory}.html`)
                    h5.card-title.card--title #{nameProduct}
                p.card-text
                  - for(let i = 0 ; i<productStar; i++){
                      i.fas.fa-star.star--color
                  - }
                  if productStarHalf
                      i.fas.fa-star-half-alt.star--color
                      - for(let i = productStar+1 ; i<5; i++){
                          i.fas.fa-star.star--disable
                      - }
                  else
                      - for(let i = productStar ; i<5; i++){
                          i.fas.fa-star.star--disable
                      - }
                  span.ml-1(class= item.totalUserVote? '': 'd-none')
                    |(#{item.totalUserVote === 1 ? `${item.totalUserVote} review` : `${item.totalUserVote} reviews`})
                p.card-text
                    if lengthProductDiscount>0 && isActiveProductDiscount 
                      span.productCostDiscount.mr-2.cost $#{costDiscount}
                      span.productCostBase.productCostBase--line-through $#{costBase}
                    else     
                      span.productCostBase.cost $#{costBase}
mixin progressBarRate(level, percentLevel)
  .itemRate.d-flex.alignItemCenter
    .ratingNum.mr-3
      span.numberVote.mr-2 #{level}
      i.fas.fa-star
    .progress.md-progress.widthProgress.mr-3
      .progress-bar(role='progressbar', style=`width: ${percentLevel}%`, aria-valuenow='100', aria-valuemin='0', aria-valuemax='100')
    .percentVote #{percentLevel}%

mixin review(item)
  - const username = item.User.username;
  - const userAvatar = item.User.UserProfile.avatar
  - const {reviewTitle, reviewContent} = item
  - const dateCreated = new Date(item.created_at).getTime()
  //- - const hours = dateCreated.getHours();
  .col-lg-3.p-4
    // Card
    .d-flex.flex-column.text-center.align-items-center
      // Card image
      img.rounded-circle.mb-2(src=userAvatar, width='65', height='65' alt='Card image cap')
      // Card content
      .userInfo
        h5.userName #{username}
        //- .userAddress
        //-   span đến từ 
        //-   span.address Ho Chi Minh
        //- .timePost tháng trước
  .col-lg-9.p-4
    .h5.commentTitle #{reviewTitle}
    span.commentContent #{reviewContent}
    //- .h6 #{dateCreated}

block head
    link(rel='stylesheet', href='../../css/index.css')
    link(rel="stylesheet", href="../../css/productDescription.css")

block nav
  - const lengthProductsAdv = productsAdv.length ? 4 : productsAdv.length
  - const productQuantity = product[0].productQuantity
  - const lengthProductDiscount = product[0].ProductDiscounts.length
  - const isActiveProductDiscount = lengthProductDiscount ? product[0].ProductDiscounts[0].isActive : false
  - const costBase = product[0].ProductPricings[0].basePrice
  - const discountValue = lengthProductDiscount ? product[0].ProductDiscounts[0].discountValue : 0
  - const productStar = parseInt(product[0].productStar);
  - const productStarHalf = productStar < product[0].productStar? true : false
  - let costDiscount = discountValue ? costBase - (discountValue*costBase)/100 : 0
  - costDiscount = Math.round(costDiscount)

  
  // Main layout
  //
        **************************************************
        Product description
        **************************************************
  main.mt-5.pt-4
    .container.dark-grey-text.mt-5
      // Grid row
      .row.wow.fadeIn
        // Grid column
        .col-md-5.mb-4.p-5
          img.img-fluid(src=product[0].ProductImages[0].imageSrc, alt=product[0].ProductImages[0].imageName)
        // Grid column
        // Grid column
        .col-md-7.mb-4
          // Content
          .p-4
            .mb-3
              div(class= isActiveProductDiscount ? 'd-block' : 'd-none')
                span.badge.red.mr-1 Sale -#{discountValue}%
            p.lead
              if isActiveProductDiscount
                span#costDiscount.productCostDiscount.mr-2.cost.h5.transitionElm(data-unit= costDiscount) #{costDiscount} $
                span#costBaseDiscount.productCostBase.productCostBase--line-through.h6.transitionElm(data-unit=costBase) #{costBase} $
                span.text-danger.ml-2.h6
                  |(Save 
                  span#savingMoney.transitionElm  #{costBase - costDiscount}
                  |$)
              else     
                span#costBase.productCostBase.cost.h6.transitionElm(data-unit=costBase) #{costBase} $
            p.lead.font-weight-bold #{product[0].productName}
            p.card-text
              - for(let i = 0 ; i<productStar; i++){
                  i.fas.fa-star.star--color
              - }
              if productStarHalf
                  i.fas.fa-star-half-alt.star--color
                  - for(let i = productStar+1 ; i<5; i++){
                      i.fas.fa-star.star--disable
                  - }
              else
                  - for(let i = productStar ; i<5; i++){
                      i.fas.fa-star.star--disable
                  - }
              span.ml-1(class= product[0].totalUserVote? '': 'd-none')
                |(#{product[0].totalUserVote === 1 ? `${product[0].totalUserVote} review` : `${product[0].totalUserVote} reviews`})
            p.mb-5 #{product[0].productDescription}
            form(action='/cart/add-item-to-cart', method='POST').d-flex.justify-content-left
              // Default input
              input#productQuantity.form-control(
                type='number'
                value='1'
                aria-label='Search'
                style='width: 100px'
                is-discount=isActiveProductDiscount.toString()
                min='1'
                max=productQuantity
                name='quantity')
              input(type="hidden", value=idProduct, name='productId')
              input#inputTotalCost(type="hidden"
                value=isActiveProductDiscount? costDiscount : costBase, name='price')
              input#inputPriceOrigin(type='hidden', value=costBase, name='priceOrigin')
              input(type='hidden', value=discountValue, name='discount')
              input(type='hidden', value=path, name='urlProduct')
              input(type="hidden"
                value= loggedIn ?  userId : 'guest'
                name=loggedIn?  'userId' : 'guest' )
              button.btn.bgBtnMain.btn-md.my-0.p(type='submit')
                | Add to cart
                i.fas.fa-shopping-cart.ml-1
          // Content
        // Grid column
      // Grid row
      hr
      // Grid row
      //
        **************************************************
        Same Products
        **************************************************
      .row.d-flex.justify-content-center.wow.fadeIn
        // Grid column
        .col-md-6.text-center
          h2.my-4.h4 You May Also Like:
            .line-break.text-center
              img(src="https://res.cloudinary.com/haophan/image/upload/v1547963844/line.png", width='150' alt="")

      .row
        - for (let i = 0; i<lengthProductsAdv; i++){
          +product(productsAdv[i])
        -}
    //
        **************************************************
        Reviews
        **************************************************
    //- - const totalUserVote = all
    section.container.dark-grey-text.mt-5

      h2.mt-3.h4 Customers reviews
      .row.mt-5
        .col-lg-4
          
          .text-center
            .h5 Average Review
            div.total-review #{finalAverageRate}/5
            div
              - for(let i = 0 ; i<productStar; i++){
                  i.fas.fa-star.star--color
              - }
              if productStarHalf
                  i.fas.fa-star-half-alt.star--color
                  - for(let i = productStar+1 ; i<5; i++){
                      i.fas.fa-star.star--disable
                  - }
              else
                  - for(let i = productStar ; i<5; i++){
                      i.fas.fa-star.star--disable
                  - }          
            p(class=totalUserRate === 0? 'd-none' : '')
              |(#{totalUserRate >1 ? `${totalUserRate} customer reviews` : `${totalUserRate} customer review`})
        .col-lg-4
          - for (let i = 4; i>=0; i--){
            +progressBarRate(i+1, percentRate[i])
          -}
          
        //
          **************************************************
          Send Reviews
          **************************************************
        .col-lg-4
          if loggedIn          
            .reviewLogged.d-flex.justify-content-end
              form.text-center.w-100.px-3(
                action='/product/product-description-review'
                method='POST'

              )
                input#inputSendReviewPath(type="hidden" name='pathProduct' value=path)
                input#inputSendReviewProductId(type="hidden" name='productId' value=idProduct)

                .h4.text-center.mb-3 Send Review
                .voteReview.d-flex
                  span.mr-3 vote
                  p#starVote
                    i.fas.fa-star.popovers.colorStarDisable.starVote(data-value='1')
                    i.fas.fa-star.popovers.colorStarDisable.starVote(data-value='2')
                    i.fas.fa-star.popovers.colorStarDisable.starVote(data-value='3')
                    i.fas.fa-star.popovers.colorStarDisable.starVote(data-value='4')
                    i.fas.fa-star.popovers.colorStarDisable.starVote(data-value='5')
                    input#inputRate(type="hidden" name='rate' value='')
                lable.d-flex(for='reviewTitle') Title
                input#commentTitle.form-control.mb-4(type='text'
                  placeholder='Title review'
                  name='reviewTitle')
                
                .form-group
                  lable.d-flex(for='reviewContent') Review
                  textarea#reviewContent.form-control.rounded-0(rows='3'
                  placeholder='Review content'
                  name='reviewContent')
                button.btn.btn-info.btn-block.my-4.bgBtnMain(type='submit') Send Review
          else
            .reviewsNoLogin.text-center
              span Login to review product:
              a.btn.bgBtnMain(href=`/login?path=${path}`)
                | Login
      hr.mb-5
      //
        ****************************************************
        Users reviews

        ****************************************************
      if(totalUserRate === 0)
        .h4.m-3 No reviews yet
      else
        .row        
          each value in reviews
            +review(value)

        nav.container.d-flex.justify-content-end(aria-label='Page navigation example')
          ul.pagination
              li.page-item(class= indexReview<2? 'page-item--hidden': '')
                  a.page-link(href=`${path}?reviewPage=${indexReview-1}`) Previous
              
              li.page-item(class= indexReview>maxPage ? 'page-item--hidden': '')
                  a.page-link(href=`${path}?reviewPage=${indexReview}`) #{indexReview}

              li.page-item(class= indexReview+1>maxPage ? 'page-item--hidden': '')
                  a.page-link(href=`${path}?reviewPage=${indexReview+1}`) #{indexReview + 1}
              
              li.page-item(class= indexReview+2>maxPage ? 'page-item--hidden': '')
                  a.page-link(href=`${path}?reviewPage=${indexReview+2}`) #{indexReview + 2}
                  
              li.page-item(class= indexReview+3>maxPage ? 'page-item--hidden': '')
                  a.page-link(href=`${path}?reviewPage=${indexReview+1}`) Next  
block footer
  script(type='text/javascript').
    const inputPriceOriginDOM = document.getElementById('inputPriceOrigin');
    const inputTotalCostDOM = document.getElementById('inputTotalCost');
    const inputProductQuantity = document.getElementById('productQuantity');
    const isDiscount = inputProductQuantity.getAttribute('is-discount');
    let costBaseDOM, costDiscountDOM, savingMoneyDOM;
    let unitBase, unitDiscount
    if(isDiscount === 'true') {
      costBaseDOM = document.getElementById('costBaseDiscount');
      costDiscountDOM = document.getElementById('costDiscount');
      savingMoneyDOM = document.getElementById('savingMoney');

      unitBase = parseInt(costBaseDOM.getAttribute('data-unit'));
      unitDiscount = parseInt(costDiscountDOM.getAttribute('data-unit'));

    }else {
      costBaseDOM = document.getElementById('costBase');
      unitBase = parseInt(costBaseDOM.getAttribute('data-unit'));


    }
    inputProductQuantity.addEventListener('input', (e) => {
      const value = parseInt(e.target.value);
      if (isDiscount === 'true') {
        const totalCost = value * unitBase;
        const totalDiscount = value * unitDiscount;
        const savingMoney = totalCost - totalDiscount;

        costBaseDOM.innerHTML = `${totalCost}$`;
        costDiscountDOM.innerHTML = `${totalDiscount}$`;
        savingMoneyDOM.innerHTML = savingMoney;
        inputTotalCostDOM.value = totalDiscount;
        inputPriceOriginDOM.value = totalCost;
      }else {
        const totalCost = value * unitBase;
        costBaseDOM.innerHTML = `${totalCost}$`;
        inputTotalCostDOM.value = totalCost;
        inputPriceOriginDOM.value = totalCost;

      }
      
      
      
    })
    /*
      **************************************************
      handle star vote
      **************************************************
      */
      

    const divStarVote = document.getElementById('starVote');
    const elmsStarVote = document.querySelectorAll('.starVote');
    const inputRate = document.getElementById('inputRate');

    console.log(divStarVote);
    console.log(elmsStarVote)
    /* 

    Handle hover star

    */

    const handleRate = (e) => {
      const starTarget = e.target;

      if (starTarget.classList.contains('starVote')) {
        const dataStar = parseInt(starTarget.getAttribute('data-value'));
        console.log(dataStar)
        inputRate.value = dataStar;
        for(let i = 0; i< dataStar; i++){
          elmsStarVote[i].classList.remove('colorStarDisable');
          elmsStarVote[i].classList.add('colorStarActive');
        }
        for(let i = dataStar; i< 5; i++){
          elmsStarVote[i].classList.remove('colorStarActive');
          elmsStarVote[i].classList.add('colorStarDisable');
        }
      }
    }
    divStarVote.addEventListener('mouseover', handleRate)

    /* 

    click star

    */

    divStarVote.addEventListener('click', handleRate)